Thema: Erstellung eines Prototyps für ein einfaches 3D-Spiel in Python

Allgemeine Projektidee:
Wir erstellen einen einfachen "3D-Schießstand" aus der Ego-Perspektive. Der Spieler befindet sich in einer geschlossenen Arena und kann auf erscheinende Ziele schießen. Das Ziel ist es, einen funktionierenden Basis-Prototyp zu erstellen.

Ausgewählte Technologien:
*   Programmiersprache: Python
*   Hauptbibliothek (Engine): Ursina

---

### Detaillierte Aufgaben nach Dateien

Bitte erstelle zwei Dateien: `requirements.txt` und `main.py`.

#### 1. Datei `requirements.txt`

*   **Aufgabe:** Die Projektabhängigkeit angeben.
*   **Inhalt:** Füge eine einzige Zeile zur Datei hinzu: `ursina`.

#### 2. Datei `main.py`

**2.1. Initialisierung und Szenen-Setup**
*   Importiere alle notwendigen Komponenten aus der `ursina`-Bibliothek.
*   Initialisiere die `Ursina`-Anwendung.
*   **Erstelle den "Boden":** Verwende ein `Entity` mit dem Modell `plane`. Setze eine große `scale` (z. B. 30), eine dunkelgrüne Farbe und, sehr wichtig, einen `collider='box'`.
*   **Erstelle die "Wände":** Erstelle vier Wände entlang des Bodenrandes, um eine geschlossene Arena zu bilden. Verwende ein `Entity` mit dem Modell `cube`, mache sie ausreichend hoch und füge ebenfalls einen `collider='box'` hinzu.
*   **Erstelle den "Himmel":** Füge ein `Sky()`-Objekt zur Szene hinzu, um einen Hintergrund zu schaffen.

**2.2. Implementierung des Spielers**
*   Verwende die eingebaute Klasse `FirstPersonController`, um den Spieler zu erstellen.
*   Setze seine Startposition in die Mitte der Arena, leicht über dem Boden.

**2.3. Implementierung der Ziele**
*   Erstelle 5 bis 10 Ziele.
*   Jedes Ziel ist ein `Entity` mit dem Modell `cube`, roter Farbe und einem `collider='box'`.
*   Verwende das `random`-Modul, um die Ziele an zufälligen Positionen innerhalb der Arena zu platzieren.

**2.4. Implementierung der Schussmechanik**
*   **Auslöser:** Das Schießen soll durch Drücken der linken Maustaste ausgelöst werden. Verwende dafür die Standardfunktion `input(key)`.
*   **Kugel:** Bei einem Schuss soll eine "Kugel" erstellt werden. Dies ist ein `Entity` mit dem Modell `sphere`, kleiner Größe und schwarzer Farbe. Die Kugel soll keinen Collider haben.
*   **Flug- und Trefferlogik:**
    *   Die Kugel soll sich konstant vorwärts in die Richtung bewegen, in die die Kamera blickt. Diese Logik muss in ihrer `update()`-Methode implementiert werden.
    *   In derselben `update()`-Methode muss die Kugel die Überlappung mit anderen Objekten mittels `self.intersects()` prüfen.
    *   Wenn die Kugel ein Ziel trifft, müssen sowohl das Ziel als auch die Kugel zerstört werden (`destroy()`).
    *   Wenn die Kugel eine Wand oder den Boden trifft, soll nur die Kugel zerstört werden.
    *   Die Kugel soll sich nach 2 Sekunden Flugzeit selbst zerstören, falls sie nichts getroffen hat.

**2.5. Starten des Spiels**
*   Rufe ganz am Ende der Datei die Methode `app.run()` auf, um die Spiel-Schleife (Game-Loop) zu starten.